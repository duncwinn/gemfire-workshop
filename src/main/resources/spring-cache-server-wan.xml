<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:gfe="http://www.springframework.org/schema/gemfire"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/gemfire http://www.springframework.org/schema/gemfire/spring-gemfire.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan base-package="demo.pivotal.dao" />
	<context:component-scan base-package="demo.pivotal.datasync" />

	<!-- Generic properties that we can set, such as where to store data and 
		log files -->
	<context:property-placeholder
		system-properties-mode="OVERRIDE" location="classpath:/common.properties" />

	<!-- gemfire.properties file for the cache server -->
	<bean id="props"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:gemfire-server.properties</value>
			</list>
		</property>
		<property name="properties">
			<props>
				<prop key="locators">${locator.host1}[${locator.port1}],${locator.host2}[${locator.port2}]
				</prop>
				<prop key="security-client-authenticator">${client-auth}</prop>
				<prop key="security-client-accessor">${client-accessor}</prop>
			</props>
		</property>
	</bean>

	<!-- when we run multiple cache servers on the same node, we need unique 
		server ports -->
	<bean id="portGenerator" class="demo.pivotal.util.ServerPortGenerator" />

	<!-- create a unique directory base directory for this node -->
	<bean id="findDiskDir" class="demo.pivotal.util.PersistenceDirectoryGenerator"
		destroy-method="unlock" init-method="findDirectory">
		<property name="parent" value="${data.location}" />
	</bean>

	<bean id="cache-logger" class="demo.pivotal.util.CacheLogger" />

	<!-- gemfire base cache configuration -->
	<gfe:cache id="cache" properties-ref="props"
		cache-xml-location="classpath:cache-server.xml" />
		
	<!-- WAN -->
	<bean id="gatewayHub" class="demo.pivotal.datasync.GatewayHubBean"
		p:id="${wan.site}" p:port="${wan.port}" p:cache-ref="cache">
		<property name="gateways">
			<list>
				<bean class="demo.pivotal.datasync.GatewayBean" p:id="${wan.remote.id}" p:attribs-ref="gatewayQueueAttributes">
					<property name="endpoints">
						<bean class="demo.pivotal.datasync.GatewayEndpointBean"
							p:id="${wan.remote.id}-${wan.remote.host}" p:host="${wan.remote.host}"
							p:port="${wan.remote.port}" />
					</property>
				</bean>
			</list>
		</property>	
	</bean>

	<!-- this makes the cache server be a 'server' in the grid -->
	<gfe:cache-server id="advanced-config" auto-startup="true"
		cache-ref="cache" port="#{portGenerator.generatePort()}" />

	<bean id="diskStore" class="demo.pivotal.util.GemfireDiskStore"
		init-method="init">
		<property name="cache" ref="cache" />
		<property name="baseDir" value="#{findDiskDir.getSelected()}" />
		<property name="diskStoreName" value="default" />
	</bean>

	<bean id="gatewayQueueAttributes" class="com.gemstone.gemfire.cache.util.GatewayQueueAttributes"
		p:diskStoreName="#{diskStore.getStore().getName()}" 
		p:enablePersistence="false"
		p:batchSize="1000"
		p:maximumQueueMemory="32"
		p:batchConflation="true" />

	<!-- GEMFIRE REGION DEFINITIONS -->
	<gfe:partitioned-region id="DUMMY" copies="1"
		name="DUMMY" cache-ref="cache">
		<gfe:cache-writer ref="dummy-cache-writer" />
	</gfe:partitioned-region>

	<gfe:replicated-region id="RESORT" cache-ref="cache"
		name="RESORT">
		<gfe:cache-listener ref="cache-logger" />
	</gfe:replicated-region>

	<bean id="gtDummy" class="org.springframework.data.gemfire.GemfireTemplate"
		p:region-ref="DUMMY" />
	<bean id="gtResort" class="org.springframework.data.gemfire.GemfireTemplate"
		p:region-ref="RESORT" />

	<!-- RESORT INJECTOR BEAN -->
	<bean id="InjectorBean" class="demo.pivotal.etl.InjectorBean"
		init-method="loadData">
		<property name="gtResort" ref="gtResort" />
		<property name="resortItemReader" ref="resortItemReader" />
		<property name="loadData" value="${load.data.boolean}" />
	</bean>

	<!-- DATABASE WRITE THROUGH BEANS -->
	<bean id="dummy-cache-writer" class="demo.pivotal.datasync.DummyCacheWriter" />

	<!-- SPRING BATCH STUFF -->
	<bean id="resortItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:/data/RESORTS.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="quoteCharacter" value="&quot;" />
						<property name="names" value="ID,Name" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="demo.pivotal.etl.ResortMapper" />
				</property>
			</bean>
		</property>
		<property name="linesToSkip" value="1" />
	</bean>

	<!-- WAN Gateway -->
	<bean id="RESORT_REPL" class="org.springframework.data.gemfire.RegionFactoryBean"
		p:cache-ref="cache" p:cacheListeners-ref="cache-logger">
		<property name="attributes">
			<bean class="org.springframework.data.gemfire.RegionAttributesFactoryBean"
				p:enableGateway="true">
				<property name="partitionAttributes">
					<bean
						class="org.springframework.data.gemfire.PartitionAttributesFactoryBean"
						p:redundant-copies="1" />
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="gtResortRepl" class="org.springframework.data.gemfire.GemfireTemplate"
		p:region-ref="RESORT_REPL" />
	
</beans>
